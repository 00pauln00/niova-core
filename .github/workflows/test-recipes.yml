name: holon_niova_workflow
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: ./code

    - name: apt update
      run: sudo apt update
    - name: dpkg / rpm prep (debug)
      run: echo "sudo -E apt-get install -y uuid-dev uuid libuuid1 libaio-dev libaio1 libgcrypt20 openssl libssl-dev `apt-cache search librocksdb | awk '{print $1}'` uncrustify libasan5 libtsan0"
    - name: dpkg / rpm prep
      run: sudo -E apt-get install -y uuid-dev uuid libuuid1 libaio-dev libaio1 libgcrypt20 openssl libssl-dev python3-pip `apt-cache search librocksdb | awk '{print $1}'` uncrustify libasan5 libtsan0
    - name: make
      run: cd ./code && make -j 4 pumicedb-dbg && make -j 4 raft-dbg

    - name: Create build dir
      run: mkdir ./build_dir

    - name: Copy niova files
      run: cp ./code/Dockerfile ./build_dir

    - name: Copy niova binaries
      run: cp ./code/pumicedb-*-test ./build_dir && cp ./code/raft-* ./build_dir

    - name: Checkout repository
      uses: actions/checkout@v2
      with:
       repository: 00pauln00/holon
       #ref: testing_with_niova_repo
       token: ${{ secrets.HOLON_NIOVA_CI_21_12_2020 }} # 'GitHub_PAT' is a secret that contains your PAT
       path: ./holon

    - name: Install python libraries
      run: sudo -E -H pip3 install func_timeout sockets psutil dpath ansible jmespath

    - name: Copy holon repo
      run: cp -r ./holon ./build_dir

    #- name: build docker image
    #  run: cd ./build_dir && docker build -t niova-holon:latest .

    - name: Create log directory for storing holon logs
      run: mkdir  /home/runner/work/niovad/niovad/holon_log

    - name:  run recipe
      run: cd ./build_dir/holon/ansible && ansible-playbook -e 'srv_port=4000' -e 'npeers=5' -e 'dir_path=/home/runner/work/niovad/niovad/holon_log' -e 'client_port=14000' -e 'recipe=basic_ctl_int.yml' -e 'backend_type=pumicedb'

    - name: List log directory
      run: ls -l /home/runner/work/niovad/niovad/holon_log 
      if: always()

    #- name: Give permissions to log dir
    #  run: chmod -R 777 /home/runner/work/niovad/niovad/holon_log
    #  if: always()

    #- name: Give permission to log dir
    #  run: chmod -R $USER:$GROUP /home/runner/work/niovad/niovad/holon_log
    #  if: always()

    - name: Archive the recipe results
      uses: actions/upload-artifact@v2
      with:
         name: test-recipe-report
         path: /home/runner/work/niovad/niovad/holon_log
      if: failure()
